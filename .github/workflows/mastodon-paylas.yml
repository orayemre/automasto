name: Mastodon Otomatik Paylaşım

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  paylas:
    runs-on: ubuntu-latest
    steps:
      - name: Gist'i İndir
        uses: greg-actions/gist-sync@v2
        with:
          gist_id: 'fa7b2f4758251a7901a64d3715b171d7'
          gist_token: ${{ secrets.GIST_TOKEN }}

      - name: Node.js Kur
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Paketleri Kur
        run: npm install mastodon-api

      - name: Paylaşımı Yap
        run: |
          cat << 'EOF' > script.js
          const fs = require('fs');
          const path = require('path');
          
          const hikayeler = fs.readFileSync(path.join(__dirname, 'hikayeler.txt'), 'utf8')
                               .split('\n')
                               .filter(line => line.trim() !== '');

          const Mastodon = require('mastodon-api');
          const mastodon = new Mastodon({
            access_token: process.env.MASTODON_TOKEN,
            api_url: 'https://sosyal.teknofest.app/api/v1/'
          });

          const secilenHikayeler = hikayeler.sort(() => 0.5 - Math.random()).slice(0, 5);

          async function paylas() {
            for (const hikaye of secilenHikayeler) {
              if (hikaye.length > 0) {
                try {
                  const resp = await mastodon.post('statuses', { status: hikaye });
                  console.log(`Başarıyla paylaşıldı: ${resp.data.url}`);
                  await new Promise(resolve => setTimeout(resolve, 2000));
                } catch (err) {
                  console.error('Hata oluştu:', err);
                }
              }
            }
          }

          paylas();
          EOF
          
          node script.js
        env:
          MASTODON_TOKEN: ${{ secrets.MASTODON_TOKEN }}
