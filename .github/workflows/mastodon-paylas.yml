name: Mastodon Otomatik Paylaşım

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  paylas:
    runs-on: ubuntu-latest
    steps:
      - name: Gist'ten Dosyayı İndir
        run: |
          echo "Gist'ten hikayeler dosyası indiriliyor..."
          curl -H "Authorization: token ${{ secrets.GIST_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/gists/fa7b2f4758251a7901a64d3715b171d7 \
               -o gist.json
          
          # jq aracı ile JSON dosyasından hikayeler.txt içeriğini ayıkla
          sudo apt-get update && sudo apt-get install -y jq
          cat gist.json | jq -r '.files["hikayeler.txt"].content' > hikayeler.txt
          
          # Dosyanın boş olup olmadığını kontrol et
          if [ ! -s "hikayeler.txt" ]; then
            echo "Hikayeler dosyası boş!"
            exit 1
          fi
          
          echo "✅ $(wc -l < hikayeler.txt) hikaye indirildi"

      - name: Node.js Kur
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Paketleri Kur
        run: npm install mastodon-api

      - name: Mastodon'da Paylaşım Yap
        run: |
          cat << 'EOF' > mastodon-paylas.js
          const fs = require('fs');
          const Mastodon = require('mastodon-api');

          // Hikayeler dosyasını oku ve boş satırları filtrele
          const hikayeler = fs.readFileSync('hikayeler.txt', 'utf8')
                               .split('\n')
                               .filter(line => line.trim() !== '');

          // Mastodon API istemcisini mevcut erişim belirteci ile başlat
          const mastodon = new Mastodon({
            access_token: process.env.MASTODON_TOKEN,
            api_url: 'https://sosyal.teknofest.app/api/v1/'
          });

          // Rastgele 3 hikaye seç
          const secilenHikayeler = hikayeler.sort(() => 0.5 - Math.random()).slice(0, 3);

          async function paylas() {
            console.log(`\n🎯 ${secilenHikayeler.length} hikaye paylaşılacak`);
            for (const hikaye of secilenHikayeler) {
              if (hikaye.length > 0) {
                try {
                  console.log(`\n📝 Paylaşım yapılıyor: "${hikaye.substring(0, 50)}..."`);
                  const resp = await mastodon.post('statuses', { status: hikaye });
                  console.log(`✅ Başarıyla paylaşıldı: ${resp.data.url}`);
                  // Paylaşımlar arası 5 saniye bekle
                  await new Promise(resolve => setTimeout(resolve, 5000));
                } catch (err) {
                  console.error('❌ Paylaşım başarısız:', err.response?.data || err.message);
                }
              }
            }
          }

          paylas();
          EOF
          
          echo "🚀 Mastodon paylaşım botu başlatılıyor..."
          node mastodon-paylas.js
        env:
          MASTODON_TOKEN: ${{ secrets.MASTODON_TOKEN }}
